version: "3.8"

services:
  frontend:
    build:
      context: ./frontend
    ports:
      - "80:80"
    depends_on:
      - backendgo
      - backend
    networks:
      - productnetwork
    restart: always

  backendgo:
    build:
      context: ./backendgo
    ports:
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock
    networks:
      - productnetwork
    restart: always

  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    ports:
      - "5076:5076"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5076
      - Redis__ConnectionString=redis:6379
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=bazac;User=sa;Password=YourPassword123!;TrustServerCertificate=True
    depends_on:
      - redis
      - sqlserver
    networks:
      - productnetwork
    restart: on-failure
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - productnetwork

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    ports:
      - "1433:1433"
    environment:
      SA_PASSWORD: "YourPassword123!"
      ACCEPT_EULA: "Y"
    networks:
      - productnetwork
    volumes:
      - sqlvolume:/var/opt/mssql

networks:
  productnetwork:

volumes:
  sqlvolume: